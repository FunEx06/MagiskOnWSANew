name: Auto Build and Publish

on:
  schedule:
    # this means every other Saturday at 12:00 UTC
    - cron: '0 12 * * 6' # run every two week
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Install Git
      run: sudo apt-get install git

    - name: Clone repository
      run: git clone https://github.com/LSPosed/MagiskOnWSALocal.git

    - name: Install dependencies
      run: |
        cd MagiskOnWSALocal
        # Install qemu-img
        sudo apt-get update
        sudo apt-get install -y qemu-utils
        sudo apt-get install -y qemu-utils attr
        # insert the commands to install other dependencies here
        # since dependencies are not specified, I will leave this comment here for you to replace with the appropriate commands

    - name: Build
      run: |
        cd MagiskOnWSALocal
        chmod +x ./scripts/build.sh
        ./scripts/build.sh --arch x64 --release-type retail --root-sol magisk --gapps-brand MindTheGapps --remove-amazon --magisk-ver stable --compress-format zip

    - name: Setup GitHub CLI
      run: |
        curl -sSL https://github.com/cli/cli/releases/download/v2.0.0/gh_2.0.0_linux_amd64.tar.gz -o gh.tar.gz
        tar xzf gh.tar.gz
        sudo install gh*/bin/gh /usr/local/bin

    - name: Authenticate with GitHub CLI
      run: echo "${{ secrets.PUBLISH_TOKEN }}" | gh auth login --with-token
      
    - name: Check for existing releases
      id: check_release
      run: |
        RELEASES=$(gh release list -R yige-yigeren/MagiskOnWSAOnlineBuild | wc -l)
        echo "RELEASE_COUNT=$RELEASES" >> $GITHUB_ENV
          
    - name: Delete old releases
      if: env.RELEASE_COUNT > 0
      run: |
        gh release list -R yige-yigeren/MagiskOnWSAOnlineBuild | cut -f 1 | while read TAG; do
          gh release delete -y $TAG
          git push --delete origin $TAG
        done
      
    - name: Publish new release
      run: |
        cd MagiskOnWSALocal/output
        FILE=$(ls *.zip)
        VERSION=$(date +%Y%m%d%H%M)
        # Extract the release name from the file name by splitting on underscores and taking the first two parts
        NAME=$(echo $FILE | cut -d '_' -f -2)

        # Define the release note
        NOTES=$(cat << EOF
        **自动构建最新的带有Magisk和Google Play的适用于 Android 的 Windows 子系统**
        
        Based on MagiskOnWSA by LSPosed Contributors
        
        Powered by Github Action
        
        Workflow written by me

        ## **快速安装指南**
        
        下载下方WSA_****.*****.*.*的文件即可（国内环境可能下载非常缓慢，推荐使用[Watt Toolkit](https://steampp.net/)的免费代理加速下载（加速勾选Github））

        ### 安装:

        解压文件夹，拷贝全部文件到任意位置（推荐C盘下创建名为WSA的文件夹并拷贝到其中）  

        双击运行*run.bat*，等待程序安装

        ### 更新:

        解压文件夹，**关闭**安卓子系统，复制文件到你原来安装的文件夹，覆盖文件，并再次运行*run.bat*
        
        正常的更新不会丢失任何用户数据，但是烦请更新过程中不要乱操作，除非你清楚你在干什么，胡乱操作可能导致跳过迁移数据步骤。

        ### 移动:

        移动后运行*run.bat*即可

        #### 提示
        
        *不要在安装完成后删除文件，只可以删除压缩包。
        
        *最好安装目录中不含有任何复杂符号（中文，各种非英文字符，特殊符号）
        
        ## 链接
        
        [适用于 Android 的 Windows 子系统发行说明](https://learn.microsoft.com/zh-cn/windows/android/wsa/release-notes)
        
        [MagiskOnWSA的详细说明](https://github.com/LSPosed/MagiskOnWSALocal#readme) （出现安装问题与运行问题先阅读本文再提Issue）
        
        ## 免责声明

        本仓库仅以公开的方式自动构建Magisk On 适用于 Android 的 Windows 子系统，不提供对于构建正常、软件能正常运行的保证，不保证您数据的安全性与可靠性。

        由于MagiskOnWSA仍然处于更新中，其Build参数可能会变化，本仓库不一定能及时更改，请在安装使用前确保相应参数与你的要求相匹配。
        
        不对错误的Build造成的数据损坏与丢失负任何责任。
        
        我不会收集任何数据，仅以原样提供构建。
        
        ## 技术支持
        
        不提供任何的技术支持，如果自动构建不正常或者有什么建议，请提出一个[新的Issue](https://github.com/yige-yigeren/MagiskOnWSAAuto/issues/new)。
        
        关于Android™️子系统运行异常的问题请在MagiskOnWSA提出一个[新的Issue](https://github.com/LSPosed/MagiskOnWSALocal/issues/new/choose)。
        
        ## Star

        如果这个项目有帮到你，请点个Star，这是对我努力的肯定ヾ(≧▽≦*)o。

        <p align="center">
          <a href="https://star-history.com/#yige-yigeren//MagiskOnWSAAuto&Date">
            <img src="https://api.star-history.com/svg?repos=yige-yigeren/MagiskOnWSAAuto&type=Date" alt="Star History Chart">
          </a>
        </p>
        
        ## 适用于 Android 的 Windows 子系统实用工具
        
        **其他开发者创建的工具，仅作建议*
        
        [APK安装程序 On Microsoft Store](https://www.microsoft.com/store/productId/9P2JFQ43FPPG) 提供一键式APK安装，可绑定APK文件
        
        [WSA工具箱 On Microsoft Store](https://www.microsoft.com/store/productId/9PPSP2MKVTGT) APK安装，APP管理，文件传输，扫描二维码
        EOF
        )
        
        gh release create "$NAME-B$VERSION" $FILE -R yige-yigeren/MagiskOnWSAAuto -t "$NAME Build$(date +%Y%m%d)" -n "$NOTES"
